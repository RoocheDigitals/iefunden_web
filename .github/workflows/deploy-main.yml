name: Deploy Main
on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      DOTENV: ${{ secrets.MAIN_DOTENV }}
      CI_GIT_BRANCH: ${{ github.ref }}
    steps:
      - run: echo 👾 Initiated by ${{ github.actor }}
      - run: echo ⚡️ Triggered by ${{ github.event_name }} to ${{ github.ref }}
      - run: echo 🐧 Running on ${{ runner.os }} server

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install Node runtime
        uses: actions/setup-node@v3
        with:
          node-version: '14'
          check-latest: true

      - name: Upgrade NPM version
        run: npm install -g npm@latest

      - name: Checkout code from ${{ github.ref }}
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          
      - name: Write .env file
        run: echo ${{ secrets.MAIN_DOTENV }} | base64 --decode > .env.local
        shell: bash

      - name: Cache node modules
        id: cache-node
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      
      - name: Install node modules
        run: |
          yarn install
          git checkout -- .
        env:
          # CI_ACCESS_TOKEN: ${{ secrets.CI_ACCESS_TOKEN }}
          IGNORE_CACHE: ${{ secrets.DEV_IGNORE_CACHE }}
        if: ${{ steps.cache-node.outputs.cache-hit != 'true' || env.IGNORE_CACHE == 'true' }}

      # - name: Run static code analysis
      #   run: npm run lint

      - name: Build
        run: yarn build

      - name: Upload files
        run: aws s3 sync ./dist s3://${{ secrets.MAIN_S3_BUCKET_NAME }} --delete

      - name: Invalidate CDN cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CF_DISTRIBUTION_ID }} \
            --paths "/*"
